//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=4.8.3928.0.
// 


/// <remarks/>
// CODEGEN: The optional WSDL extension element 'method' from namespace 'http://www.w3.org/2000/wsdl/suds' was not handled.
// CODEGEN: The optional WSDL extension element 'class' from namespace 'http://www.w3.org/2000/wsdl/suds' was not handled.
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="clsServerBinding", Namespace="http://schemas.microsoft.com/clr/nsassem/Server/Server%2C%20Version%3D1.0.0.0%2C%" +
    "20Culture%3Dneutral%2C%20PublicKeyToken%3Dnull")]
public partial class clsServerService : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback getServerTimeOperationCompleted;
    
    /// <remarks/>
    public clsServerService() {
        this.Url = "http://localhost:80/Server/server.soap";
    }
    
    /// <remarks/>
    public event getServerTimeCompletedEventHandler getServerTimeCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://schemas.microsoft.com/clr/nsassem/Server.clsServer/Server#getServerTime", RequestNamespace="http://schemas.microsoft.com/clr/nsassem/Server.clsServer/Server", ResponseNamespace="http://schemas.microsoft.com/clr/nsassem/Server.clsServer/Server")]
    [return: System.Xml.Serialization.SoapElementAttribute("return")]
    public System.DateTime getServerTime() {
        object[] results = this.Invoke("getServerTime", new object[0]);
        return ((System.DateTime)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetServerTime(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getServerTime", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public System.DateTime EndgetServerTime(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.DateTime)(results[0]));
    }
    
    /// <remarks/>
    public void getServerTimeAsync() {
        this.getServerTimeAsync(null);
    }
    
    /// <remarks/>
    public void getServerTimeAsync(object userState) {
        if ((this.getServerTimeOperationCompleted == null)) {
            this.getServerTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetServerTimeOperationCompleted);
        }
        this.InvokeAsync("getServerTime", new object[0], this.getServerTimeOperationCompleted, userState);
    }
    
    private void OngetServerTimeOperationCompleted(object arg) {
        if ((this.getServerTimeCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getServerTimeCompleted(this, new getServerTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void getServerTimeCompletedEventHandler(object sender, getServerTimeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getServerTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getServerTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.DateTime Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.DateTime)(this.results[0]));
        }
    }
}
